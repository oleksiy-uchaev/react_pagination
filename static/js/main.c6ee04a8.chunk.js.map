{"version":3,"sources":["components/Pagination/Pagination.tsx","utils/utils.ts","App.tsx","index.tsx"],"names":["Pagination","perPage","currentPage","onPageChange","pages","pageSet","Math","ceil","p","push","getPages","firstPage","lastPage","length","isFirst","isLast","className","classNames","disabled","href","onClick","map","page","active","App","useState","setPerPage","setCurrentPage","currPageCapacity","getPagination","from","to","items","numbers","n","getNumbers","title","id","defaultValue","onChange","event","Number","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YAEI,IADJC,oBACI,MADW,aACX,EACEC,ECHD,SAAkBH,GAIvB,IAHA,IAAMI,EAAUC,KAAKC,KAbF,GAaeN,GAC5BG,EAAQ,GAELI,EAAI,EAAGA,EAAIH,EAASG,GAAK,EAChCJ,EAAMK,KAAKD,EAAI,GAGjB,OAAOJ,EDLOM,CAAST,GAEjBU,EAAYP,EAAM,GAClBQ,EAAWR,EAAMA,EAAMS,OAAS,GAEhCC,EAAUZ,IAAgBS,EAC1BI,EAASb,IAAgBU,EAU/B,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,IAAnD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAhBgB,kBAAMjB,EAC5BW,EAAUH,EAAYT,EAAc,IAUhC,oBAWDE,EAAMiB,KAAI,SAACC,GAAD,OACT,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQrB,IAAgBoB,IAH5B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMjB,EAAamB,IAJ9B,SAMGA,KAXEA,MAgBT,oBAAIN,UAAWC,IAAW,YAAa,CAAEC,SAAUH,IAAnD,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QA1CgB,kBAAMjB,EAC5BY,EAASH,EAAWV,EAAc,IAoC9B,wBE3DKsB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoByB,EAApB,KAEA,EDcK,SACL1B,EACAC,GAEA,IAAM0B,EAAmB1B,EAAcD,EAKvC,MAAO,CAHM2B,EAAmB3B,EAAU,EAC/B2B,EA9BQ,MA8B2BA,GCrB3BC,CAAc5B,EAASC,GAA1C,mBAAO4B,EAAP,KAAaC,EAAb,KACMC,EDRD,SAAoBF,EAAcC,GAGvC,IAFA,IAAME,EAAU,GAEPC,EAAIJ,EAAMI,GAAKH,EAAIG,GAAK,EAC/BD,EAAQxB,KAAKyB,GAGf,OAAOD,ECCOE,CAAWL,EAAMC,GAAIV,KAAI,SAAAa,GAAC,qBAAYA,MAW9CE,EAAK,eAAWlC,EAAX,mBAAiC4B,EAAjC,cAA2CC,EAA3C,eDrBQ,GCqBR,KAEX,OACE,sBAAKf,UAAU,YAAf,UACE,uDACA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAAoCoB,IAEpC,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,aAAc,EACdC,SAvBW,SAACC,GACpBd,EAAWe,OAAOD,EAAME,OAAOC,QAC/BhB,EAAe,IAgBT,UAOE,wBAAQgB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,QAASA,EACTC,YAAaA,EACbC,aAnCmB,SAACmB,GACxBK,EAAeL,MAqCb,6BACGU,EAAMX,KAAI,SAAAwB,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCxDjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c6ee04a8.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { getPages } from '../../utils/utils';\n\ntype Props = {\n  perPage: number,\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  currentPage,\n  onPageChange = () => {},\n}) => {\n  const pages = getPages(perPage);\n\n  const firstPage = pages[0];\n  const lastPage = pages[pages.length - 1];\n\n  const isFirst = currentPage === firstPage;\n  const isLast = currentPage === lastPage;\n\n  const handleClickPrev = () => onPageChange(\n    isFirst ? firstPage : currentPage - 1,\n  );\n\n  const handleClickNext = () => onPageChange(\n    isLast ? lastPage : currentPage + 1,\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: isFirst })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirst}\n          onClick={handleClickPrev}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={classNames('page-item', {\n            active: currentPage === page,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', { disabled: isLast })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLast}\n          onClick={handleClickNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export const total = 42;\n\nexport function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getPages(perPage: number): number[] {\n  const pageSet = Math.ceil(total / perPage);\n  const pages = [];\n\n  for (let p = 0; p < pageSet; p += 1) {\n    pages.push(p + 1);\n  }\n\n  return pages;\n}\n\nexport function getPagination(\n  perPage: number,\n  currentPage: number,\n): number[] {\n  const currPageCapacity = currentPage * perPage;\n\n  const from = currPageCapacity - perPage + 1;\n  const to = currPageCapacity > total ? total : currPageCapacity;\n\n  return [from, to];\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers, getPagination, total } from './utils/utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [from, to] = getPagination(perPage, currentPage);\n  const items = getNumbers(from, to).map(n => `Item ${n}`);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const title = `Page ${currentPage} (items ${from} - ${to} of ${total})`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n      <p className=\"lead\" data-cy=\"info\">{title}</p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}